name: Node CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      NODE_APP_INSTANCE: ci

    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]

    services:
      mysql:
        image: mariadb:10
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: skeletontest
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install Deps
      run: npm ci
    - name: Lint
      run: npm run lint:ci
    - name: Build
      run: npm run build
    - name: Test
      run: npm run coverage:ci
      env:
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.OUTPUT_AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.OUTPUT_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.OUTPUT_AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-2
        SOURCE_DIR: reports
        DEST_DIR: ci/${{ github.repository }}/${{ github.sha }}/${{ matrix.node-version }}
    - name: Archive artifacts
      uses: actions/upload-artifact@v1
      with:
        name: reports
        path: reports
